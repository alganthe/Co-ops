//-------------------------On Load
author = "alganthe";                                    // Visible when loading mission
onLoadName = "Co-ops";                                  // Visible when loading mission
OnLoadMission = "";
loadScreen = "";
overviewPicture = "Data\Co_ops_loadingImage.paa";

onLoadIntro = "";                                       // Displays a message while the intro is loading.
onLoadIntroTime = 0;                                    // Time and date displayed while the intro loads. 1 visible, 0 hidden.
onLoadMissionTime = 0;                                  // Time and date displayed while the mission loads. 1 visible, 0 hidden.

class Header {
    gameType = COOP;                                    // Unknown, COOP, DM, TDM, CTF, SC, CTI, RPG, Sandbox, Seize, Defend.
    minPlayers = 1;                                     // Min # of players the MISSION supports
    maxPlayers = 69;                                    // Max # of players the MISSION supports, not server slots. Make sure # is greater than server slots.
};

//-------------------------Misc
disableChannels[] = {{0, true, true}, {1, false, true}, {2, true, true}, {6, true, true}};                          // 0 = Global, 1 = Side, 2 = Command, 3 = Group, 4 = Vehicle, 5 = Direct, 6 = System. Admin/server/BattlEye can still use Global.
disabledAI = 1;                                         // No AI in playable units
aiKills = 0;                                            // disable scorelist for AI players
enableItemsDropping = 0;                                // disabled with 0
joinUnassigned = 1;                                     // 0 = players forced into role on join
enableDebugConsole = 1;                                 // 0 = editor default behavior, 1 = SP / Hosts / Logged admin, 2 = everyone

//-------------------------Respawn
class CfgRespawnTemplates {
    class derp_revive {
        // Function or script executed upon death. Parameters passed into it are the same as are passed into onPlayerKilled.sqf file
        onPlayerKilled = "derp_revive_fnc_onPlayerKilled";
        // Function or script executed upon respawn. Parameters passed into it are the same as are passed into onPlayerRespawn.sqf file
        onPlayerRespawn = "derp_revive_fnc_onPlayerRespawn";
        // Default respawn delay (can be overwitten by description.ext entry of the same name)
        respawnDelay = 10;
        // 1 to respawn player when he joins the game. Available only for INSTANT and BASE respawn types
        // Can be overridden by description.ext attribute of the same name
        respawnOnStart = -1;
    };
};

respawn = 3;
respawnDelay = 10;
respawnOnStart = 0;
respawnTemplates[] = {"MenuPosition", __EVAL(call compile preprocessFileLineNumbers "functions\revive\fn_ace3Check.sqf")};
// Remove the eval if you desire to use an other vanilla revive system, it's used to detect the ACE3 revive system and enable or not derp_revive

derp_revive_bleedOutTimer = 300;
derp_revive_everyoneCanRevive = 0; // 0 = medics only, 1 = everyone
derp_revive_reviveItem = 0; // 0 = first aid kit, 1 = medikit
derp_revive_removeFAKOnUse = 1; // 0 = don't remove on use, 1 = remove on use

//-------------------------Functions
#include "functions\taw_vd\GUI.h"
#include "functions\portedFuncs\ace3\progressBarGUI.hpp"

class CfgFunctions {
    #include "functions\functions.hpp"
};

//---------------------------Mission Parameters
class Params {

    class Daytime {
        title = $STR_a3_cfgvehicles_moduledate_f_arguments_hour_0;
        values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23};
        texts[] = {"00:00", "01:00","02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00"};
        default = 7;
        function = "derp_fnc_daytime";
    };

    class DayDuration {
        title = "Day duration";
        values[] = {1, 2, 3, 4, 6, 8, 12, 16, 24, 36, 48};
        texts[] = {"24 hours", "12 hours", "8 hours", "6 hours", "4 hours", "3 hours", "2 hours", "1 hour 30 minutes", "1 hour", "40 minutes", "30 minutes"};
        default = 6;
    };

    class ShortNights {
        title = "Enable shorter nights?";
        texts[] = {"No", "Yes"};
        values[] = {0, 1};
        default = 0;
    };

    class staminaEnabled {
        title = "Enable player stamina ?";
        texts[] = {"No", "Yes"};
        values[] = {0, 1};
        default = 1;
    };

    class EnableRespawn {
        title = "Enable respawn?";
        texts[] = {"No", "Yes"};
        values[] = {0, 1};
        default = 1;
    };

    class ArsenalFilter {
        title = "Filter mode of the arsenal";
        texts[] = {"Arsenal disabled", "Arsenal enabled but filtered", "Arsenal enabled"};
        values[] = {0, 1, 2};
        default = 1;
    };

    class paraJumpEnabled {
        title = "Enable para jumps on AO?";
        texts[] = {"No", "Yes"};
        values[] = {0, 1};
        default = 1;
    };

    class mapDrawingEnabled {
        title = "Enable map drawing?";
        texts[] = {"No", "Yes"};
        values[] = {0, 1};
        default = 0;
    };

    class VehicleRespawnDistance {
        title = "Distance from players that vehicles won't respawn";
        values[] = {10, 50, 100, 200, 300, 400, 500, 1000, 2000, 5000, 10000};
        texts[] = {"10m", "50m", "100m", "200m", "300m", "400m", "500m", "1km", "2km", "5km", "10km"};
        default = 1000;
    };

    class AOSize {
        title = "Size of the AOs";
        values[] = {500, 600, 700, 800, 900, 1000, 1200, 1400, 1600, 1800, 2000};
        texts[] = {"500m", "600m", "700m", "800m", "900m", "1km", "1.2km", "1.4km", "1.6km", "1.8km", "2km"};
        default = 1000;
    };

    class AOFinishEnemyPercentage {
        title = "Percentage of enemies left to complete the AO";
        values[] = {0.50, 0.40, 0.30, 0.20, 0.15, 0.10, 0.05};
        texts[] = {"50%", "40%", "30%", "20%", "15%", "10%", "5%"};
        default = 0.10;
    };

    class MissionAmount {
        title = "Amount of AOs before mission ends";
        values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"Disabled", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
        default = 0;
    };

    class smRewardAfter {
        title = "Amount of side missions before recieving a reward";
        values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"Rewards disabled", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
        default = 1;
    };

    class AntiAirAmount {
        title = "Amount of AA vehicles on the main AO";
        values[] = {0, 1, 2, 3, 4, 5, 6};
        texts[] = {"0", "1", "2", "3", "4", "5", "6"};
        default = 1;
    };

    class MRAPAmount {
        title = "Amount of MRAPs on the main AO";
        values[] = {0 ,1, 2, 3, 4, 5, 6};
        texts[] = {"0" ,"1", "2", "3", "4", "5", "6"};
        default = 2;
    };

    class RandomVehcsAmount {
        title = "Amount of random vehicles on the main AO";
        values[] = {0 ,1, 2, 3, 4, 5, 6};
        texts[] = {"1", "2", "3", "4", "5", "6"};
        default = 0;
    };

    class InfantryGroupsAmount {
        title = "Amount of infantry groups on the main AO";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
        default = 8;
    };

    class AAGroupsAmount {
        title = "Amount of AA groups on the main AO";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
        default = 4;
    };

    class ATGroupsAmount {
        title = "Amount of AT groups on the main AO";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};
        default = 2;
    };

    class airReinforcementTimer {
        title = "Enemy air reinforcements timer";
        values[] = {300, 600, 900};
        texts[] = {"5 minutes", "10 minutes", "15 minutes"};
        default = 600;
    };

    class AIAimingAccuracy {
        title = "AI aiming accuracy";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
        default = 2;
    };

    class AIAimingShake {
        title = "AI aiming shake";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
        default = 2;
    };

    class AIAimingSpeed {
        title = "AI aiming speed";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
        default = 2;
    };

    class AISpotingDistance {
        title = "AI spotting distance";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
        default = 5;
    };

    class AISpottingSpeed {
        title = "AI spotting speed";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
        default = 2;
    };

    class AICourage {
        title = "AI courage";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
        default = 10;
    };

    class AIReloadSpeed {
        title = "AI reload speed";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
        default = 5;
    };

    class AICommandingSkill {
        title = "AI commanding skill";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
        default = 7;
    };

    class AIGeneralSkill {
        title = "AI general skill";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"0.1", "0.2", "0.3", "0.4", "0.5", "0.6", "0.7", "0.8", "0.9", "1"};
        default = 8;
    };
};

//-------------------------UI stuff
class RscTitles {
    #include "functions\misc\crewNameDefines.hpp"   // Occupants HUD for vehicles
};

//---------------------------Tasks
class CfgTaskEnhancements {
    enable       = 1;            //0: disable new task features (default), 1: enable new task features & add new task markers and task widgets into the map
    3d           = 0;            //0: do not use new 3D markers (default), 1: replace task waypoints with new 3D markers
    3dDrawDist   = 2000;        //3d marker draw distance (default: 2000)
    share        = 0;            //0: do not count assigned players (default), 1: count how many players have the task assigned
    propagate    = 0;            //0: do not propagate (default), 1: propagate shared tasks to subordinates
};
